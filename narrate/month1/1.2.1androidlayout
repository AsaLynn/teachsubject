Android的常用布局以及控件解析
1,分类
    LinearLayout(线性布局)
        显示特点：所有子控件按照横向或者竖向依次排列
    RelativeLayout(相对布局)
        显示特点：和LinearLayout布局相似，所有子控件默认显示在RelativeLayout的左上角
    FrameLayout(帧布局)
        显示特点：所有的子控件默认显示在FrameLayout的左上角，会重叠在一起显示。
    TableLayout(表格布局)
        表格布局和网格布局类似，但是需要注意的是，表格布局不能跨行，只能跨列
    GridLayout(网格布局)
        显示特点：所有子控件默认在GridLayout中横向依次排列，当只等每行的列数时，到达指定列数
        会自动换行显示。
    AbsoluteLayout(绝对布局)
        绝对布局也叫坐标布局，指定控件的绝对位置，简单直接，直观性强，但是手机屏幕尺寸差别较大，
        适应性差
2,LinearLayout
    线性布局在开发中使用最多，具有垂直方向与水平方向的布局方式，通过设置属性“android:orientation”控制方向，
    属性值垂直（vertical）和水平(horizontal)，默认水平方向。
    android:gravity：内部控件对齐方式，常用属性值有center、center_vertical、center_horizontal、top、bottom、left、right等。
    center：居中显示，这里并不是表示显示在LinearLayout的中心，当LinearLayout线性方向为垂直方向时，
    center表示水平居中，但是并不能垂直居中，此时等同于center_horizontal的作用；
    同样当线性方向为水平方向时，center表示垂直居中，等同于center_vertical。
    top、bottom、left、right顾名思义为内部控件居顶、低、左、右布局。
    这里要与android:layout_gravity区分开，layout_gravity是用来设置自身相对于父元素的布局。
    android:layout_weight：权重，用来分配当前控件在剩余空间的大小。
    使用权重一般要把分配该权重方向的长度设置为零，比如在水平方向分配权重，就把width设置为零。
3,RelativeLayout
    相对布局可以让子控件相对于兄弟控件或父控件进行布局，可以设置子控件相对于兄弟控件
    或父控件进行上下左右对齐。

    RelativeLayout能替换一些嵌套视图，当我们用LinearLayout来实现一个简单的布局但又使用了过多的嵌套时，
    就可以考虑使用RelativeLayout重新布局。
    RelativeLayout中子控件常用属性：
    1、相对于父控件，例如：android:layout_alignParentTop=“true”
    android:layout_alignParentTop      控件的顶部与父控件的顶部对齐;
    android:layout_alignParentBottom  控件的底部与父控件的底部对齐;
    android:layout_alignParentLeft      控件的左部与父控件的左部对齐;
    android:layout_alignParentRight     控件的右部与父控件的右部对齐;

    2、相对给定Id控件，例如：android:layout_above=“@id/**”
    android:layout_above 控件的底部置于给定ID的控件之上;
    android:layout_below     控件的底部置于给定ID的控件之下;
    android:layout_toLeftOf    控件的右边缘与给定ID的控件左边缘对齐;
    android:layout_toRightOf  控件的左边缘与给定ID的控件右边缘对齐;
    android:layout_alignBaseline  控件的baseline与给定ID的baseline对齐;
    android:layout_alignTop        控件的顶部边缘与给定ID的顶部边缘对齐;
    android:layout_alignBottom   控件的底部边缘与给定ID的底部边缘对齐;
    android:layout_alignLeft       控件的左边缘与给定ID的左边缘对齐;
    android:layout_alignRight      控件的右边缘与给定ID的右边缘对齐;

    3、居中，例如：android:layout_centerInParent=“true”
    android:layout_centerHorizontal 水平居中;
    android:layout_centerVertical    垂直居中;
    android:layout_centerInParent  父控件的中央;
4,FrameLayout
    帧布局或叫层布局，从屏幕左上角按照层次堆叠方式布局，后面的控件覆盖前面的控件。
    该布局在开发中设计地图经常用到，因为是按层次方式布局，我们需要实现层面显示的样式时就可以
    采用这种布局方式，比如我们要实现一个类似百度地图的布局，我们移动的标志是在一个图层的上面。
    在普通功能的软件设计中用得也不多。
5,AbsoluteLayout
    绝对布局也叫坐标布局，指定控件的绝对位置，简单直接，直观性强，但是手机屏幕尺寸差别较大，
    适应性差，Android 1.5已弃用，可以用RelativeLayout替代。
6,TableLayout
    表格布局继承自LinearLayout，通过TableRow设置行，列数由TableRow中的子控件决定，
    直接在TableLayout中添加子控件会占据整个一行。

    TableLayout常用属性：
    android:shrinkColumns：设置可收缩的列，内容过多就收缩显示到第二行
    android:stretchColumns：设置可伸展的列，将空白区域填充满整个列
    android:collapseColumns：设置要隐藏的列
    列的索引从0开始，shrinkColumns和stretchColumns可以同时设置。

    子控件常用属性：
    android:layout_column：第几列
    android:layout_span：占据列数